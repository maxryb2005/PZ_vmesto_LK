import requests  # Подключение библиотеки requests для выполнения HTTP-запросов.

# URL для API GitHub, используем для поиска репозиториев.
search_url = "https://api.github.com/search/repositories"
# Параметры запроса, в котором ищем репозитории по ключевому слову "html".
params = {
    "q": "html",
}

# Отправка GET-запроса с указанным URL и параметрами.
response = requests.get(search_url, params=params)
# Печать кода статуса ответа (200 указывает на успешный запрос).
print("Статус код:", response.status_code)

# Если код ответа равен 200 (успешный запрос), продолжаем обработку данных.
if response.status_code == 200:
    # Преобразуем ответ в JSON формат и сохраняем его в переменную data.
    data = response.json()
    # Печать полученных данных в формате JSON.
    print("Ответ в формате JSON:", data)
else:
    # В случае ошибки выводим текст ошибки.
    print("Ошибка при получении данных:", response.text)

# Указываем userId, чтобы получить записи для определенного пользователя.
userId = 1
# URL для API JSONPlaceholder, который используется для получения постов.
posts_url = "https://jsonplaceholder.typicode.com/posts"
# Параметры запроса для получения постов пользователя с userId = 1.
user_id_param = {
    "userId": 1
}

# Отправляем GET-запрос для получения постов пользователя с указанным userId.
response = requests.get(posts_url, params=user_id_param)

# Если код ответа равен 200, продолжаем обработку данных.
if response.status_code == 200:
    # Преобразуем ответ в JSON формат и сохраняем в переменную posts.
    posts = response.json()
    # Печать найденных постов.
    print("Записи:", posts)
else:
    # В случае ошибки выводим текст ошибки.
    print("Ошибка при получении данных:", response.text)

# URL для API JSONPlaceholder, куда будет отправлен новый пост.
post_url = "https://jsonplaceholder.typicode.com/posts"
# Данные, которые нужно отправить для создания нового поста.
data_to_send = {
    'title': 'foo',  # Заголовок нового поста.
    'body': 'bar',   # Содержимое нового поста.
    'userId': 1      # ID пользователя, которому принадлежит пост.
}

# Отправка POST-запроса для создания нового поста с указанными данными.
response = requests.post(post_url, json=data_to_send)
# Печать статуса ответа на POST-запрос.
print("Статус код POST-запроса:", response.status_code)

# Если код ответа равен 201 (создано), выводим созданные данные.
if response.status_code == 201:
    print("Созданные данные:", response.json())
else:
    # В случае ошибки выводим текст ошибки.
    print("Ошибка при отправке данных:", response.text)
